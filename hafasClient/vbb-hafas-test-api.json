{
  "openapi": "3.0.0",
  "info": {
    "title": "Proxy API",
    "version": "2.45.2"
  },
  "servers": [
    {
      "url": "https://vbb.demo.hafas.de/restproxy/"
    }
  ],
  "tags": [
    {
      "name": "/arrivalBoard"
    },
    {
      "name": "/departureBoard"
    },
    {
      "name": "/gisroute"
    },
    {
      "name": "/himsearch"
    },
    {
      "name": "/journeyDetail"
    },
    {
      "name": "/journeypos"
    },
    {
      "name": "/location.name"
    },
    {
      "name": "/location.nearbystops"
    },
    {
      "name": "/recon"
    },
    {
      "name": "/trip"
    },
    {
      "name": "/swagger-ui"
    },
    {
      "name": "/xsd"
    }
  ],
  "paths": {
    "/arrivalBoard": {
      "get": {
        "tags": ["/arrivalBoard"],
        "summary": "Arrival Board",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Specifies the station/stop ID for which the arrivals shall be retrieved. Required if extId is not present. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extId",
            "in": "query",
            "description": "Deprecated. Please use `id` as it supports external IDs.\n\nSpecifies the external station/stop ID for which the arrivals shall be retrieved. Required if id is not present. String not longer than 512.\n\nSince version: 1.21",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "If only vehicles departing or arriving from a certain direction shall be returned, specify the direction by giving the station/stop ID of the last stop on the journey. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Sets the start date for which the departures shall be retrieved. Represented in the format YYYY-MM-DD.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Sets the start time for which the departures shall be retrieved. Represented in the format hh:mm[:ss] in 24h nomenclature. Seconds will be ignored for requests.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Set the interval size in minutes. Range: 0-1439\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "60"
            }
          },
          {
            "name": "maxJourneys",
            "in": "query",
            "description": "Maximum number of journeys to be returned. If no value is defined or -1, all departing/arriving services within the duration sized period are returned. Minimum of -1.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "-1"
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "Decimal value defining the product classes to be included in the search. It represents a bitmask combining bit number of a product as defined in the HAFAS raw data. Values are retrievable by <<service_datainfo,Data Information service>>. Minimum of 0.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "operators",
            "in": "query",
            "description": "Only journeys provided by the given operators are part of the result. To filter multiple operators, separate the codes by comma.\nIf the operator should not be part of the journeys, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Only journeys provided by the given categories are part of the result. To filter multiple categories, separate the codes by comma.\nIf the category should not be part of the journeys, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 2.25",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "description": "Only journeys running the given line are part of the result. To filter multiple lines, separate the codes by comma. If the line should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Filter boards by one or more attribute codes of a journey. Multiple attribute codes are separated by comma. If the attribute should not be part of the result, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "Filter boards by platform. Multiple platforms are separated by comma. String not longer than 1024.\n\nSince version: 2.7.2",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passlist",
            "in": "query",
            "description": "Include a list of all passed waystops?\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "passlistMaxStops",
            "in": "query",
            "description": "Maximum number of stops including requested stop and last stop. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "minDur",
            "in": "query",
            "description": "Minimum duration a journey has left to be returned. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "baim",
            "in": "query",
            "description": "Enables/disables BAIM information.\n\nSince version: 2.26",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "rtMode",
            "in": "query",
            "description": "Set the realtime mode to be used.\n\nSince version: 2.34",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["OFF", "SERVER_DEFAULT"],
              "default": "SERVER_DEFAULT"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Set the station arrival board type to be used.\n\nARR: Arrival board as configured in HAFAS\nARR_EQUIVS: Arrival board with all journeys at any masts and equivalent stops\nARR_MAST: Arrival board at mast\nARR_STATION: Arrival board with all journeys at any masts of the requested station\n\nSince version: 2.12",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["ARR", "ARR_EQUIVS", "ARR_MAST", "ARR_STATION"],
              "default": "ARR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ArrivalBoard"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrivalBoard"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/departureBoard": {
      "get": {
        "tags": ["/departureBoard"],
        "summary": "Departure Board",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Specifies the station/stop ID for which the departures shall be retrieved. Required if extId is not present. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extId",
            "in": "query",
            "description": "Deprecated. Please use `id` as it supports external IDs.\n\nSpecifies the external station/stop ID for which the departures shall be retrieved. Required if id is not present. String not longer than 512.\n\nSince version: 1.21",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "If only vehicles departing or arriving from a certain direction shall be returned, specify the direction by giving the station/stop ID of the last stop on the journey. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Sets the start date for which the departures shall be retrieved. Represented in the format YYYY-MM-DD.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Sets the start time for which the departures shall be retrieved. Represented in the format hh:mm[:ss] in 24h nomenclature. Seconds will be ignored for requests.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Set the interval size in minutes. Range: 0-1439\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "60"
            }
          },
          {
            "name": "maxJourneys",
            "in": "query",
            "description": "Maximum number of journeys to be returned. If no value is defined or -1, all departing/arriving services within the duration sized period are returned. Minimum of -1.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "-1"
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "Decimal value defining the product classes to be included in the search. It represents a bitmask combining bit number of a product as defined in the HAFAS raw data. Values are retrievable by <<service_datainfo,Data Information service>>. Minimum of 0.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "operators",
            "in": "query",
            "description": "Only journeys provided by the given operators are part of the result. To filter multiple operators, separate the codes by comma.\nIf the operator should not be part of the journeys, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Only journeys provided by the given categories are part of the result. To filter multiple categories, separate the codes by comma.\nIf the category should not be part of the journeys, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 2.25",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "description": "Only journeys running the given line are part of the result. To filter multiple lines, separate the codes by comma. If the line should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Filter boards by one or more attribute codes of a journey. Multiple attribute codes are separated by comma. If the attribute should not be part of the result, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platforms",
            "in": "query",
            "description": "Filter boards by platform. Multiple platforms are separated by comma. String not longer than 1024.\n\nSince version: 2.7.2",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "passlist",
            "in": "query",
            "description": "Include a list of all passed waystops?\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "passlistMaxStops",
            "in": "query",
            "description": "Maximum number of stops including requested stop and last stop. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "minDur",
            "in": "query",
            "description": "Minimum duration a journey has left to be returned. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "baim",
            "in": "query",
            "description": "Enables/disables BAIM information.\n\nSince version: 2.26",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "rtMode",
            "in": "query",
            "description": "Set the realtime mode to be used.\n\nSince version: 2.34",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["OFF", "SERVER_DEFAULT"],
              "default": "SERVER_DEFAULT"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Set the station departure board type to be used.\n\nDEP: Departure board as configured in HAFAS\nDEP_EQUIVS: Departure board with all journeys at any masts and equivalent stops\nDEP_MAST: Departure board at mast\nDEP_STATION: Departure board with all journeys at any masts of the requested station\n\nSince version: 2.12",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["DEP", "DEP_EQUIVS", "DEP_MAST", "DEP_STATION"],
              "default": "DEP"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DepartureBoard"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartureBoard"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/gisroute": {
      "get": {
        "tags": ["/gisroute"],
        "summary": "GIS Route by Context",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "ctx",
            "in": "query",
            "description": "Specifies the GIS route context. String not longer than 8096.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "poly",
            "in": "query",
            "description": "Enables/disables the calculation of the polyline.\n\nSince version: 1.11",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "polyEnc",
            "in": "query",
            "description": "Defines encoding of the returned polyline. Possible values are N (no encoding / compression), DLT (delta to the previous coordinate), GPA (Google encoded polyline format) defaults to N. Not all option might be available in your installation.\n\nSince version: 1.11",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["DLT", "GPA", "N"],
              "default": "N"
            }
          },
          {
            "name": "eco",
            "in": "query",
            "description": "Enables/disables eco value calculation.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "baim",
            "in": "query",
            "description": "Enables/disables BAIM.\n\nSince version: 2.39",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TripList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripList"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/himsearch": {
      "get": {
        "tags": ["/himsearch"],
        "summary": "HIM Search",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "dateB",
            "in": "query",
            "description": "Sets the event period start date.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateE",
            "in": "query",
            "description": "Sets the event period end date.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeB",
            "in": "query",
            "description": "Sets the event period start time.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timeE",
            "in": "query",
            "description": "Sets the event period end time.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weekdays",
            "in": "query",
            "description": "Bitmask for validity of HIM messages based on weekdays. Each character represents a weekday starting on monday.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "himIds",
            "in": "query",
            "description": "List of HIM message IDs seperated by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hierarchicalView",
            "in": "query",
            "description": "Return parent messages with childs.\n\nSince version: 2.8.1",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "operators",
            "in": "query",
            "description": "List of operators seperated by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "List of train categories seperated by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channels",
            "in": "query",
            "description": "List of channels seperated by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companies",
            "in": "query",
            "description": "List of companies seperated by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "description": "Only HIM messages for the given line are part of the result. To filter multiple lines, separate the codes by comma. String not longer than 1024.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineids",
            "in": "query",
            "description": "Only HIM messages for the given line (identified by its line ID) are part of the result. To filter multiple lines, separate the line IDs by comma. String not longer than 1024.\n\nSince version: 2.11",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stations",
            "in": "query",
            "description": "List of (external) station ids to be filtered for seperated by comma. String not longer than 1024.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromstation",
            "in": "query",
            "description": "Filter messages by line segment starting at this station given as (external) station id. String not longer than 512.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tostation",
            "in": "query",
            "description": "Filter messages by line segment travelling in direction of this station given as (external) station id. String not longer than 512.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bothways",
            "in": "query",
            "description": "If enabled, messages in both directions - from 'fromstation' to 'tostation' as well as from 'tostation' to 'fromstation' are returned\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "trainnames",
            "in": "query",
            "description": "List of train name to be filtered for seperated by comma. String not longer than 1024.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metas",
            "in": "query",
            "description": "List of predefined filters seperated by comma. String not longer than 512.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "himcategory",
            "in": "query",
            "description": "HIM category, e.g. Works and/or Disturbance. Value depends on your HAFAS server data. String not longer than 512.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "himtags",
            "in": "query",
            "description": "HIM Tags. Value depends on your HAFAS server data. String not longer than 1024.\n\nSince version: 2.10",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regions",
            "in": "query",
            "description": "Filter for HIM messages based on regions defined in HAFAS raw data. Seperated by comma. Available regions can be retrieved by /datainfo service. String not longer than 1024.\n\nSince version: 2.16",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "himtext",
            "in": "query",
            "description": "Filter for HIM messages containing the given free text message seperated by comma. String not longer than 1024.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "himtexttags",
            "in": "query",
            "description": "Return HIM texts having this text tag(s) only. Multiple values are separated by comma. Note: HIM text tags differ from HIM tags. String not longer than 1024.\n\nSince version: 2.16",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exthimtext",
            "in": "query",
            "description": "Extended filter based on tags and and corresponding localized text fragments. String not longer than 1024.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additionalfields",
            "in": "query",
            "description": "List of additional fields and values to be filtered for. String not longer than 1024.\n\nSince version: 2.22",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "extInfo",
            "in": "query",
            "description": "Filter for HIM messages based on external ids and id sources. Different items are seperated by comma. Value seperated by pipe symbol. To negate put ! in front of the item. String not longer than 8096.\n\nSince version: 2.38",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "poly",
            "in": "query",
            "description": "Enables/disables returning of geo information for affected edges and regions if available and enabled in the backend.\n\nSince version: 1.23.12",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "searchmode",
            "in": "query",
            "description": "HIM search mode.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["MATCH", "NOMATCH", "TFMATCH"]
            }
          },
          {
            "name": "affectedJourneyMode",
            "in": "query",
            "description": "Define how to return affected journeys\n\nSince version: 2.5",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["ALL", "OFF"]
            }
          },
          {
            "name": "affectedJourneyStopMode",
            "in": "query",
            "description": "Define how to return stops of affected journeys\n\nSince version: 2.5",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["ALL", "IMP", "OFF"]
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Define the Order the returned messages by fields and directions. Multiple, comma separated entries are supported Range: EVT_BEG_ASC,EVT_BEG_DESC,EVT_END_ASC,EVT_END_DESC,HID_ASC,HID_DESC,LMOD_ASC,LMOD_DESC,PRIO_ASC,PRIO_DESC\n\nSince version: 2.4.1",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minprio",
            "in": "query",
            "description": "Filter for HIM messages having at least this priority. Minimum of 0.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxprio",
            "in": "query",
            "description": "Filter for HIM messages having this priority as maximum. Minimum of 0.\n\nSince version: 2.4",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "llLat",
            "in": "query",
            "description": "Lower left latitude of bounding box.\n\nSince version: 2.24.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "llLon",
            "in": "query",
            "description": "Lower left longitude of bounding box.\n\nSince version: 2.24.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "urLat",
            "in": "query",
            "description": "Upper right latitude of bounding box.\n\nSince version: 2.24.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "urLon",
            "in": "query",
            "description": "Upper right longitude of bounding box.\n\nSince version: 2.24.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HimMessages"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HimMessages"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/journeyDetail": {
      "get": {
        "tags": ["/journeyDetail"],
        "summary": "Journey detail",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Specifies the internal journey id of the journey shall be retrieved. Maximum length 512. String not longer than 512.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Day of operation\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "poly",
            "in": "query",
            "description": "Enables/disables the calculation of the polyline for each leg of the trip except any GIS route.\n\nSince version: 1.11",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "polyEnc",
            "in": "query",
            "description": "Defines encoding of the returned polyline. Possible values are N (no encoding / compression), DLT (delta to the previous coordinate), GPA (Google encoded polyline format) defaults to N. Not all option might be available in your installation.\n\nSince version: 1.11",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["DLT", "GPA", "N"],
              "default": "N"
            }
          },
          {
            "name": "showPassingPoints",
            "in": "query",
            "description": "Enables/disables the return of stops having no alighting and no boarding in its passlist for each leg of the trip.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "rtMode",
            "in": "query",
            "description": "Set the realtime mode to be used.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["FULL", "INFOS", "OFF", "REALTIME", "SERVER_DEFAULT"]
            }
          },
          {
            "name": "fromId",
            "in": "query",
            "description": "Specifies the station/stop ID the partial itinerary shall start from. String not longer than 512.\n\nSince version: 2.3",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromIdx",
            "in": "query",
            "description": "Specifies the station/stop index the partial itinerary shall start from. Minimum of 0.\n\nSince version: 2.3",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toId",
            "in": "query",
            "description": "Specifies the station/stop ID the partial itinerary shall end at. String not longer than 512.\n\nSince version: 2.3",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toIdx",
            "in": "query",
            "description": "Specifies the station/stop index the partial itinerary shall end at. Minimum of 0.\n\nSince version: 2.3",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "baim",
            "in": "query",
            "description": "Enables/disables BAIM search and response.\n\nSince version: 2.7.3",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JourneyDetail"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JourneyDetail"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/journeypos": {
      "get": {
        "tags": ["/journeypos"],
        "summary": "Journey Position",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "llLat",
            "in": "query",
            "description": "Lower left latitude of bounding box.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "llLon",
            "in": "query",
            "description": "Lower left longitude of bounding box.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "urLat",
            "in": "query",
            "description": "Upper right latitude of bounding box.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "urLon",
            "in": "query",
            "description": "Upper right longitude of bounding box.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "operators",
            "in": "query",
            "description": "Filter for operators. To filter multiple operators, separate the codes by comma. String not longer than 8096.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "Decimal value defining the product classes to be included in the search. It represents a bitmask combining bit number of a product as defined in the HAFAS raw data. Values are retrievable by <<service_datainfo,Data Information service>>. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Filter trips by one or more attribute codes of a journey. Multiple attribute codes are separated by comma. If the attribute should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jid",
            "in": "query",
            "description": "Filter journeys by one or more journey id. Multiple journey ids are separated by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "description": "Only journeys running the given line are part of the result. To filter multiple lines, separate the codes by comma. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "infotexts",
            "in": "query",
            "description": "Filter journeys by one or more custom infotext filters. Multiple infotexts are separated by comma. If the infotext should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxJny",
            "in": "query",
            "description": "Maximum number of journeys in response. Minimum of 0. Range: 1-1000\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "periodSize",
            "in": "query",
            "description": "Size of interval journey positions should be retrieved in milliseonds. Minimum of 0.\n\nSince version: 2.24",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "30000"
            }
          },
          {
            "name": "periodStep",
            "in": "query",
            "description": "Size of interval steps. Minimum of 0.\n\nSince version: 2.24",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "2000"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Day of operation.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Time the service operates according to scheduled data. If not provided, the whole day is taken into account.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "positionMode",
            "in": "query",
            "description": "Mode the used for position calculation. REPORT_ONLY: Only get back reported positions; CALC_REPORT: Use reported position if available, calculate if not; CALC: Calculate all positions; Default REPORT_ONLY\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["CALC", "CALC_REPORT", "REPORT_ONLY"],
              "default": "REPORT_ONLY"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JourneyList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JourneyList"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/location.name": {
      "get": {
        "tags": ["/location.name"],
        "summary": "Location Search by Name",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "input",
            "in": "query",
            "description": "Search for that token. String not longer than 512.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxNo",
            "in": "query",
            "description": "Maximum number of returned stops. Range: 1-1000\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "10"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type filter for location types.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["A", "ALL", "AP", "P", "S", "SA", "SP"],
              "default": "ALL"
            }
          },
          {
            "name": "locationSelectionMode",
            "in": "query",
            "description": "Selection mode for locations.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["SLCT_A", "SLCT_N"]
            }
          },
          {
            "name": "withEquivalentLocations",
            "in": "query",
            "description": "Return equivalent locations.\n\nSince version: 2.33",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "restrictSelection",
            "in": "query",
            "description": "Restrict allowed stations.\n\nSince version: 2.31",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["D", "I", "S", "V"],
              "default": "S"
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "Decimal value defining the product classes to be included in the search. It represents a bitmask combining bit number of a product as defined in the HAFAS raw data. Values are retrievable by <<service_datainfo,Data Information service>>. Minimum of 0.\n\nSince version: 1.15",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "withProducts",
            "in": "query",
            "description": "Return locations with products.\n\nSince version: 2.28",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "1"
            }
          },
          {
            "name": "productRepresentatives",
            "in": "query",
            "description": "If activated, only one representative of a location product per category is returned.\n\nSince version: 2.28",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "coordLat",
            "in": "query",
            "description": "Latitude of centre coordinate.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "coordLong",
            "in": "query",
            "description": "Longitude of centre coordinate.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "r",
            "in": "query",
            "description": "Search radius in meter around the given coordinate if any. Minimum of 1.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "refineId",
            "in": "query",
            "description": "In case of an refinable location, this value takes the ID of the refinable one of a previous result. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Filter by a predefined meta filter. If the rules of the predefined filter should not be negated, put ! in front of it. Multiple values are separated by comma if definded for POI filtering. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stations",
            "in": "query",
            "description": "Filter for stations. Matches if the given value is prefix of any station ID. Multiple values are separated by comma. String not longer than 4096.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sattributes",
            "in": "query",
            "description": "Filter locations by one or more attribute codes. Multiple attribute codes are separated by comma. If the attribute should not be part of the be location data, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sinfotexts",
            "in": "query",
            "description": "Filter locations by one or more station infotext codes and values. Parameter structure is code|value. Multiple attribute codes are separated by comma. String not longer than 1024.\n\nSince version: 2.24",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filterMode",
            "in": "query",
            "description": "Filter modes for nearby searches.\n\nSince version: 2.7",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["DIST_PERI", "EXCL_PERI", "SLCT_PERI"],
              "default": "DIST_PERI"
            }
          },
          {
            "name": "poolId",
            "in": "query",
            "description": "Filter locations by pool id (also known as Pool UIC code). Multiple values are separated by comma. To negate put ! in front of the value. String not longer than 8096.\n\nSince version: 2.26",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LocationList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationList"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/location.nearbystops": {
      "get": {
        "tags": ["/location.nearbystops"],
        "summary": "Location Search by Coordinate",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "originCoordLat",
            "in": "query",
            "description": "Latitude of centre coordinate.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "originCoordLong",
            "in": "query",
            "description": "Longitude of centre coordinate.\n\nSince version: 1.0",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "r",
            "in": "query",
            "description": "Search radius in meter around the given coordinate. Minimum of 1.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "1000"
            }
          },
          {
            "name": "maxNo",
            "in": "query",
            "description": "Maximum number of returned stops. Minimum of 0. Range: 1-1000\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "10"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type filter for location types.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["S", "P", "SP", "SE", "PE", "SPE"],
              "default": "S"
            }
          },
          {
            "name": "locationSelectionMode",
            "in": "query",
            "description": "Selection mode for locations.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["SLCT_A", "SLCT_N"]
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "Decimal value defining the product classes to be included in the search. It represents a bitmask combining bit number of a product as defined in the HAFAS raw data. Values are retrievable by <<service_datainfo,Data Information service>>. Minimum of 0.\n\nSince version: 1.15",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Filter by a predefined meta filter. If the rules of the predefined filter should not be negated, put ! in front of it. Multiple values are separated by comma if definded for POI filtering. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sattributes",
            "in": "query",
            "description": "Filter locations by one or more attribute codes. Multiple attribute codes are separated by comma. If the attribute should not be part of the be location data, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sinfotexts",
            "in": "query",
            "description": "Filter locations by one or more station infotext codes and values. Multiple attribute codes are separated by comma the value by pipe |. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "poolId",
            "in": "query",
            "description": "Filter locations by pool id (also known as Pool UIC code). Multiple values are separated by comma. To negate put ! in front of the value. String not longer than 8096.\n\nSince version: 2.26",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Incorporate date. Represented in the format YYYY-MM-DD.\n\nSince version: 2.39",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Incorporate time. Represented in the format hh:mm[:ss] in 24h nomenclature. Seconds will be ignored for requests.\n\nSince version: 2.39",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zoom",
            "in": "query",
            "description": "Retrieve stops most relevant to this map zoom level. Range: 0-21\n\nSince version: 2.39",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "poiCategories",
            "in": "query",
            "description": "Filter locations by POI types. Multiple attribute codes are separated by comma. If the attribute should not be part of the be location data, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 2.42",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LocationList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationList"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/recon": {
      "get": {
        "tags": ["/recon"],
        "summary": "Reconstruction",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "ctx",
            "in": "query",
            "description": "Specifies the reconstruction context. String not longer than 32768.\n\nSince version: 1.12",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "poly",
            "in": "query",
            "description": "Enables/disables the calculation of the polyline for each leg of the trip except any GIS route.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "polyEnc",
            "in": "query",
            "description": "Defines encoding of the returned polyline. Possible values are N (no encoding / compression), DLT (delta to the previous coordinate), GPA (Google encoded polyline format) defaults to N. Not all option might be available in your installation.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["DLT", "GPA", "N"],
              "default": "N"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Sets the start date for which the departures shall be retrieved. Represented in the format YYYY-MM-DD.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useCombinedComparison",
            "in": "query",
            "description": "Compare based on combined output name - false: Compare parameters (category, line, train number) individually",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "acceptGaps",
            "in": "query",
            "description": "Accept an incomplete description of the connection (with gaps) i.e. missing walks/transfers\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "allowDummySections",
            "in": "query",
            "description": "Allow a partial reconstruction that will not lead to a reconstruction failure if sections are not reconstructable. Instead, for theses inconstructable sections, dummy sections will be created in the result.\n\nSince version: 2.11.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "flagAllNonReachable",
            "in": "query",
            "description": "Should all non-reachable journeys be flagged (true), or only the first one encountered?\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "matchCatStrict",
            "in": "query",
            "description": "Should the category (Gattung) match exactly? Only applicable if useCombinedComparison is false\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "matchIdNonBlank",
            "in": "query",
            "description": "Should the train identifier (Zugbezeichner) without whitespace match?\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "matchIdStrict",
            "in": "query",
            "description": "Should the train identifier (Zugbezeichner) match exactly?\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "matchNumStrict",
            "in": "query",
            "description": "Should the train number (Zugnummer) match exactly? Only applicable if useCombinedComparison is false\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "matchRtType",
            "in": "query",
            "description": "Should the realtime type that journeys are based on (e.g. SOLL, IST, additional, deviation, ...) be considered?\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "enableRtFullSearch",
            "in": "query",
            "description": "By default, the reconstruction request makes one attempt for each journey within the scheduled data. However, the scheduled data may not necessarily reflect basic realtime properties of the journeys therein. In such a case, one may enable a two-step approach which we call \"full search\", i.e. search for matching journeys in the scheduled data in a first step. If this fails, then search for matching journeys in the realtime data.\n\nSince version: 2.15",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "enableReplacements",
            "in": "query",
            "description": "If set to true replaces cancelled journeys with their replacement journeys if possible.\n\nSince version: 2.21.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "arrL",
            "in": "query",
            "description": "Lower deviation in minutes within interval [0, 720] indicating \"how much earlier than original arrival\" Range: 0-720\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "arrU",
            "in": "query",
            "description": "Upper deviation in minutes within interval [0, 720] indicating \"how much later than original arrival\" Range: 0-720\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "depL",
            "in": "query",
            "description": "Lower deviation in minutes within interval [0, 720] indicating \"how much earlier than original departure\" Range: 0-720\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "depU",
            "in": "query",
            "description": "Upper deviation in minutes within interval [0, 720] indicating \"how much later than original departure\" Range: 0-720\n\nSince version: 2.6.2",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "passlist",
            "in": "query",
            "description": "Enables/disables the return of the passlist for each leg of the trip.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "showPassingPoints",
            "in": "query",
            "description": "Enables/disables the return of stops having no alighting and boarding in its passlist for each leg of the trip. Needs passlist parameter enabled.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "rtMode",
            "in": "query",
            "description": "Set the realtime mode to be used.\n\nSince version: 2.10.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["FULL", "INFOS", "OFF", "REALTIME", "SERVER_DEFAULT"]
            }
          },
          {
            "name": "baim",
            "in": "query",
            "description": "Enables/disables BAIM.\n\nSince version: 2.39",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "eco",
            "in": "query",
            "description": "Only supported if legacy environmental calculator is used.\n\nDeprecated. Enables/disables eco value calculation.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "ecoCmp",
            "in": "query",
            "description": "Only supported if legacy environmental calculator is used.\n\nDeprecated. Enables/disables eco comparison.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "ecoParams",
            "in": "query",
            "description": "Provide additional eco parameters. Values vary. String not longer than 1024.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tariff",
            "in": "query",
            "description": "Enables/disables the output of tariff data. The default is configurable via provisioning.\n\nSince version: 2.7",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "trafficMessages",
            "in": "query",
            "description": "Enables/disables the output of traffic messages. The default is configurable via provisioning.\n\nSince version: 2.7",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "travellerProfileData",
            "in": "query",
            "description": "Traveller profile data. Structure depends on set up. String not longer than 32768.\n\nSince version: 2.15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withJourneyBoundaryPoints",
            "in": "query",
            "description": "Enables/disables the return of journey boundary stops at public transport legs.\n\nSince version: 2.24",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "freq",
            "in": "query",
            "description": "Sets the frequency interval length for the search of journey alternatives in minutes. Using a value of 0 results in the suppression of the search for alternatives. Minimum of 0.\n\nSince version: 2.35",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TripList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripList"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/trip": {
      "get": {
        "tags": ["/trip"],
        "summary": "Trip Search",

        "parameters": [
          {
            "name": "requestId",
            "in": "query",
            "description": "Request ID for identifying the request. String not longer than 2048.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Requested response format. If not set, the Accept-Header is used. If both are missing application/xml is used",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["xml", "json", "jsonp"]
            }
          },
          {
            "name": "jsonpCallback",
            "in": "query",
            "description": "Requests the JSON response data is wrapped into a JavaScript function with that name. String not longer than 1024.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "The language of the journey planer. String not longer than 5.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "de"
            }
          },
          {
            "name": "originId",
            "in": "query",
            "description": "Specifies the station/stop ID of the origin for the trip.\nSuch ID can be retrieved from the location.name or location.nearbystops services. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originExtId",
            "in": "query",
            "description": "Deprecated. Please use `originId` as it supports external IDs.\n\nSpecifies the external station/stop ID of the origin for the trip.\nSuch ID can be retrieved from the location.name or location.nearbystops services. String not longer than 512.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCoordLat",
            "in": "query",
            "description": "Latitude of station/stop coordinate of the trip’s origin. The coordinate can be retrieved from the location.name or location.nearbystops services.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "originCoordLong",
            "in": "query",
            "description": "Longitude of station/stop coordinate of the trip’s origin. The coordinate can be retrieved from the location.name or location.nearbystops services.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "originCoordName",
            "in": "query",
            "description": "Name of the trip's origin if coordinate cannot be resolved to an address or poi. String not longer than 512.\n\nSince version: 2.13",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCoordType",
            "in": "query",
            "description": "Type of the trip's origin if coordinate cannot be resolved to an address or poi.\n\nSince version: 2.30",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["A", "ALL", "C", "P", "S"]
            }
          },
          {
            "name": "destId",
            "in": "query",
            "description": "Specifies the station/stop ID of the destination for the trip.\nSuch ID can be retrieved from the location.name or location.nearbystops services. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destExtId",
            "in": "query",
            "description": "Deprecated. Please use `destId` as it supports external IDs.\n\nSpecifies the external station/stop ID of the destination for the trip.\nSuch ID can be retrieved from the location.name or location.nearbystops services. String not longer than 512.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destCoordLat",
            "in": "query",
            "description": "Latitude of station/stop coordinate of the trip’s destination. The coordinate can be retrieved from the location.name or location.nearbystops services.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destCoordLong",
            "in": "query",
            "description": "Longitude of station/stop coordinate of the trip’s destination. The coordinate can be retrieved from the location.name or location.nearbystops services.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destCoordName",
            "in": "query",
            "description": "Name of the trip's destination if coordinate cannot be resolved to an address or poi. String not longer than 512.\n\nSince version: 2.13",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destCoordType",
            "in": "query",
            "description": "Type of the trip's destination if coordinate cannot be resolved to an address or poi.\n\nSince version: 2.30",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["A", "ALL", "C", "P", "S"]
            }
          },
          {
            "name": "via",
            "in": "query",
            "description": "Complex structure to provide multiple via points separated by semicolon. String not longer than 8096.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viaId",
            "in": "query",
            "description": "ID of a station/stop used as a via for the trip. Specifying a via station forces the trip search to look for trips which must pass through this station.\nSuch IDs can be retrieved from the location.name or location.nearbystops services. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viaWaitTime",
            "in": "query",
            "description": "Defines the waiting time spent at via station in minutes. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "0"
            }
          },
          {
            "name": "avoid",
            "in": "query",
            "description": "Complex structure to provide multiple points to be avoided separated by semicolon. String not longer than 8096.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidId",
            "in": "query",
            "description": "ID of a station/stop to be avoided as transfer stop for the trip.\nSuch IDs can be retrieved from the location.name or location.nearbystops services. String not longer than 512.\n\nSince version: 1.22.2",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viaGis",
            "in": "query",
            "description": "Complex structure to provide multiple GIS via locations separated by semicolon. String not longer than 8096.\n\nSince version: 2.14",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeTimePercent",
            "in": "query",
            "description": "Configures the walking speed when changing from one leg of the journey to the next one. It extends the time required for changes by a specified percentage.\nA value of 200 doubles the change time as initially calculated by the system. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "100"
            }
          },
          {
            "name": "minChangeTime",
            "in": "query",
            "description": "Minimum change time at stop in minutes. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxChangeTime",
            "in": "query",
            "description": "Maximum change time at stop in minutes. Minimum of 0.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "addChangeTime",
            "in": "query",
            "description": "This amount of minutes is added to the change time at each stop. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "maxChange",
            "in": "query",
            "description": "Maximum number of changes. Range: 0-11\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Sets the start date for which the departures shall be retrieved. Represented in the format YYYY-MM-DD.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "Sets the start time for which the departures shall be retrieved. Represented in the format hh:mm[:ss] in 24h nomenclature. Seconds will be ignored for requests.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchForArrival",
            "in": "query",
            "description": "If set, the date and time parameters specify the arrival time for the trip search instead of the departure time.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "numF",
            "in": "query",
            "description": "Minimum number of trips after or before the search time, depending on search direction. Sum of numF and numB has to be less or equal 6. The maximum value depends on the actual configuration.\n\nPlease see the section below about the search algorithm for more details. Range: 1-6\n\nSince version: 1.10",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "5"
            }
          },
          {
            "name": "numB",
            "in": "query",
            "description": "Minimum number of trips before or after the search time, depending on search direction. Sum of numF and numB has to be less or equal 6. The maximum value depends on the actual configuration.\n\nPlease see the section below about the search algorithm for more details. Range: 0-5\n\nSince version: 1.10",
            "required": false,
            "schema": {
              "type": "integer",
              "default": "0"
            }
          },
          {
            "name": "context",
            "in": "query",
            "description": "Defines the starting point for the scroll back or forth operation. Use the scrB value from a previous result to scroll backwards in time and use the scrF value to scroll forth. String not longer than 8096.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "poly",
            "in": "query",
            "description": "Enables/disables the calculation of the polyline for each leg of the trip except any GIS route.\n\nSince version: 1.11",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "polyEnc",
            "in": "query",
            "description": "Defines encoding of the returned polyline. Possible values are N (no encoding / compression), DLT (delta to the previous coordinate), GPA (Google encoded polyline format) defaults to N. Not all option might be available in your installation.\n\nSince version: 1.11",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["DLT", "GPA", "N"],
              "default": "N"
            }
          },
          {
            "name": "passlist",
            "in": "query",
            "description": "Enables/disables the return of the passlist for each leg of the trip.\n\nSince version: 1.20",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "products",
            "in": "query",
            "description": "Decimal value defining the product classes to be included in the search. It represents a bitmask combining bit number of a product as defined in the HAFAS raw data. Values are retrievable by <<service_datainfo,Data Information service>>. Minimum of 0.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "operators",
            "in": "query",
            "description": "Only trips provided by the given operators are part of the result. To filter multiple operators, separate the codes by comma.\nIf the operator should not be part of the trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Only trips provided by the given categories are part of the result. To filter multiple categories, separate the codes by comma.\nIf the category should not be part of the trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 2.25",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryFlags",
            "in": "query",
            "description": "Only trips matching the given category flags are part of the result. To filter multiple category flags, separate the codes by comma. String not longer than 1024.\n\nSince version: 2.35",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Filter trips by one or more attribute codes of a journey. Multiple attribute codes are separated by comma. If the attribute should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sattributes",
            "in": "query",
            "description": "Filter trips by one or more station attribute codes of a journey. Multiple attribute codes are separated by comma. If the attribute should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.23.7",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fattributes",
            "in": "query",
            "description": "Filter trips by one or more footway attribute codes of a journey. Multiple attribute codes are separated by comma. If the attribute should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 2.7",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "description": "Only journeys running the given line are part of the result. To filter multiple lines, separate the codes by comma. If the line should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineids",
            "in": "query",
            "description": "Only journeys running the given line (identified by its line ID) are part of the result. To filter multiple lines, separate the line IDs by comma. If the line should not be part of the be trip, negate it by putting ! in front of it. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "avoidPaths",
            "in": "query",
            "description": "Only path not having the given properties will be part of the result. String not longer than 512.\n\nSince version: 1.12",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originWalk",
            "in": "query",
            "description": "Enables/disables using footpaths in the beginning of a trip when searching from an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originBike",
            "in": "query",
            "description": "Enables/disables using bike routes in the beginning of a trip when searching from an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originCar",
            "in": "query",
            "description": "Enables/disables using car in the beginning of a trip when searching from an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originTaxi",
            "in": "query",
            "description": "Enables/disables using taxi rides in the beginning of a trip when searching from an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originPark",
            "in": "query",
            "description": "Enables/disables using Park and Ride in the beginning of a trip when searching from an address String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originMeta",
            "in": "query",
            "description": "Enables using one or more predefined individual transport meta profile at the beginning of a trip. The profiles are defined in the HAFAS installation. String not longer than 512.\n\nSince version: 1.23.25",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destWalk",
            "in": "query",
            "description": "Enables/disables using footpaths at the end of a trip when searching to an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destBike",
            "in": "query",
            "description": "Enables/disables using bike routes at the end of a trip when searching to an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destCar",
            "in": "query",
            "description": "Enables/disables using car routes at the end of a trip when searching to an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destTaxi",
            "in": "query",
            "description": "Enables/disables using taxi rides at the end of a trip when searching to an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destPark",
            "in": "query",
            "description": "Enables/disables using Park and Ride at the end of a trip when searching to an address. String not longer than 1024.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destMeta",
            "in": "query",
            "description": "Enables using one or more predefined individual transport meta profile at the end of a trip. The profiles are defined in the HAFAS installation. String not longer than 512.\n\nSince version: 1.23.25",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalWalk",
            "in": "query",
            "description": "Enables/disables using footpaths for the whole trip. String not longer than 1024.\n\nSince version: 1.23.20",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalBike",
            "in": "query",
            "description": "Enables/disables using bike routes for the whole trip. String not longer than 1024.\n\nSince version: 1.23.20",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalCar",
            "in": "query",
            "description": "Enables/disables using car routes for the whole trip. String not longer than 1024.\n\nSince version: 1.23.20",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalTaxi",
            "in": "query",
            "description": "Enables/disables using taxi rides for the whole trip. String not longer than 1024.\n\nSince version: 1.23.20",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalMeta",
            "in": "query",
            "description": "Enables using one or more predefined individual transport meta profile for a trip. The profiles are defined in the HAFAS installation. String not longer than 512.\n\nSince version: 1.23.25",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gisProducts",
            "in": "query",
            "description": "Filter on GIS product, e.g. specific sharing provider. Currently, only exclusion of certain providers is available by adding ! in front of the provider meta code. Available codes are customer sprecific. String not longer than 8096.\n\nSince version: 2.19",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeIv",
            "in": "query",
            "description": "Enables/disables search for individual transport routes.\n\nSince version: 2.6.5",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "ivOnly",
            "in": "query",
            "description": "Enables/disables search for individual transport routes only.\n\nSince version: 1.23.20",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "includeDrt",
            "in": "query",
            "description": "Enables/disables search for DRT routes.\n\nSince version: 2.42",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "1"
            }
          },
          {
            "name": "mobilityProfile",
            "in": "query",
            "description": "Use a predefined filter by its name. The filters are defined in the HAFAS installation. If the filter should be negated, put a ! in front of its name. String not longer than 512.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bikeCarriage",
            "in": "query",
            "description": "Enables/disables search for trips explicit allowing bike carriage.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "bikeCarriageType",
            "in": "query",
            "description": "Filter for a specific bike carriage type. Allowed types are SINGLEBIKES, SMALLGROUPS and LARGEGROUPS. May be not available in any installation.\n\nSince version: 2.16",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["SINGLEBIKES", "SMALLGROUPS", "LARGEGROUPS"]
            }
          },
          {
            "name": "sleepingCar",
            "in": "query",
            "description": "Enables/disables search for trips having sleeping car.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "couchetteCoach",
            "in": "query",
            "description": "Enables/disables search for trips having couchette coach.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "showPassingPoints",
            "in": "query",
            "description": "Enables/disables the return of stops having no alighting and boarding in its passlist for each leg of the trip. Needs passlist enabled.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "baim",
            "in": "query",
            "description": "Enables/disables BAIM search and response.\n\nSince version: 1.23.8",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "eco",
            "in": "query",
            "description": "Only supported if legacy environmental calculator is used.\n\nDeprecated. Enables/disables eco value calculation.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "ecoCmp",
            "in": "query",
            "description": "Only supported if legacy environmental calculator is used.\n\nDeprecated. Enables/disables eco comparison.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "ecoParams",
            "in": "query",
            "description": "Provide additional eco parameters. String not longer than 1024.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rtMode",
            "in": "query",
            "description": "Set the realtime mode to be used.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["FULL", "INFOS", "OFF", "REALTIME", "SERVER_DEFAULT"]
            }
          },
          {
            "name": "unsharp",
            "in": "query",
            "description": "Enables/disables unsharp search mode.\n\nSince version: 1.23.13",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "trainFilter",
            "in": "query",
            "description": "Filters a trip search for a certain train. String not longer than 1024.\n\nSince version: 1.23.9",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "economic",
            "in": "query",
            "description": "Enables/disables economic search mode.\n\nSince version: 1.23.14",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "allowFootpathEquivalences",
            "in": "query",
            "description": "If the walk is disabled or a maximum walk distance of 0 is set and all other gis modalities are disabled HAFAS is allowed to use start/destination equivalences that are connected by a data foot path.\n\nSince version: 2.26",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "1"
            }
          },
          {
            "name": "groupFilter",
            "in": "query",
            "description": "Use a predefined group filter to query for certain modes. String not longer than 512.\n\nSince version: 1.23.14",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockingList",
            "in": "query",
            "description": "Defines a section of a route of a journey not to be used within the trip search. String not longer than 32768.\n\nSince version: 1.23.18",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "blockedEdges",
            "in": "query",
            "description": "List of edges within the public transport network that should be excluded from the result. String not longer than 32768.\n\nSince version: 2.22",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "trainComposition",
            "in": "query",
            "description": "Enables/disables train composition data.\n\nSince version: 1.0",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "includeEarlier",
            "in": "query",
            "description": "Disables search optimization in relation of duration.\n\nSince version: 1.23.18",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "withICTAlternatives",
            "in": "query",
            "description": "Enables/disables the search for alternatives with individualized change times (ICT).\n\nSince version: 1.23.19",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          },
          {
            "name": "tariff",
            "in": "query",
            "description": "Enables/disables the output of tariff data. The default is configurable via provisioning.\n\nSince version: 2.7",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "trafficMessages",
            "in": "query",
            "description": "Enables/disables the output of traffic messages. The default is configurable via provisioning.\n\nSince version: 2.7",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"]
            }
          },
          {
            "name": "travellerProfileData",
            "in": "query",
            "description": "Traveller profile data. Structure depends on set up. String not longer than 32768.\n\nSince version: 2.15",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withFreq",
            "in": "query",
            "description": "Enables/disables the calculation of frequency information.\n\nSince version: 2.18",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "1"
            }
          },
          {
            "name": "withJourneyBoundaryPoints",
            "in": "query",
            "description": "Enables/disables the return of journey boundary stops at public transport legs.\n\nSince version: 2.24",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["0", "1"],
              "default": "0"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TripList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TripList"
                }
              }
            }
          }
        },
        "security": [
          {
            "accessId": []
          }
        ]
      }
    },
    "/systemInfo": {
      "get": {
        "summary": "Health API",

        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["full", "ready", "alive"],
              "default": "full"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MessageEventType": {
        "type": "object",
        "properties": {
          "sstop": {
            "$ref": "#/components/schemas/StopType"
          },
          "estop": {
            "$ref": "#/components/schemas/StopType"
          },
          "sStop": {
            "$ref": "#/components/schemas/StopType"
          },
          "eStop": {
            "$ref": "#/components/schemas/StopType"
          },
          "sectionNum": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "eTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "eDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "current": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "direction": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "LegList": {
        "type": "object",
        "properties": {
          "Leg": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Leg"
            }
          }
        },
        "xml": {
          "name": "LegList",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "Directions": {
        "required": ["Direction"],
        "type": "object",
        "properties": {
          "Direction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Direction"
            }
          }
        },
        "xml": {
          "name": "Directions",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "WeatherInformationType": {
        "required": ["date", "type"],
        "type": "object",
        "properties": {
          "icon": {
            "$ref": "#/components/schemas/IconType"
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "UNDEF",
              "CLEAR",
              "PARTIALLY_CLOUDY",
              "CLOUDY",
              "RAIN",
              "HEAVY_RAIN",
              "SNOW",
              "HEAVY_SNOW",
              "HAIL",
              "HEAVY_HAIL",
              "FOG",
              "THUNDERSTORM",
              "STORM",
              "SLIGHTLY_CLOUDY",
              "SLEET",
              "RAIN_SHOWER",
              "SNOW_SHOWER",
              "SLEET_SHOWER",
              "HEAVY_FOG",
              "SLIPPERY_ROAD",
              "DRIZZLE",
              "WET_AND_COLD",
              "DRY",
              "SANDSTORM",
              "HEAVY_SANDSTORM",
              "THUNDER_SANDSTORM",
              "LIGHT_RAIN"
            ]
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "time": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "temp": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "text": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "summary": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PlatformType": {
        "type": "object",
        "properties": {
          "altId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "U",
              "PL",
              "ST",
              "GA",
              "PI",
              "SL",
              "FL",
              "CI",
              "CO",
              "X",
              "H"
            ]
          },
          "text": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "hidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Stops": {
        "required": ["Stop"],
        "type": "object",
        "properties": {
          "Stop": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StopType"
            }
          }
        },
        "xml": {
          "name": "Stops",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "JourneyList": {
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Journey": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JourneyType"
            }
          },
          "planningPeriodBegin": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planningPeriodEnd": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "JourneyList",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "LocationNotes": {
        "required": ["LocationNote"],
        "type": "object",
        "properties": {
          "LocationNote": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationNote"
            }
          }
        },
        "xml": {
          "name": "LocationNotes",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "SortingType": {
        "type": "object",
        "properties": {
          "SortingGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortingGroupType"
            }
          },
          "initialSortingType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "TI",
              "CO",
              "CF",
              "UT",
              "DT",
              "AT",
              "PT",
              "CO2",
              "OC",
              "CAL"
            ]
          },
          "scrollable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ReferencedJourneyType": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "journey": {
            "$ref": "#/components/schemas/JourneyType"
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "UNDEF",
              "DEFAULT",
              "IST_ERSATZFAHRT",
              "IST_VERSTAERKERFAHRT",
              "IST_FORTFUEHRUNG",
              "IST_TRENNUNG",
              "IST_FORTFUEHRUNG_VON_TRENNUNG",
              "IST_ZUSAMMENFUEHRUNG",
              "IST_FORTFUEHRUNG_DURCH_ZUSAMMENFUEHRUNG",
              "IST_ENTLASTUNG",
              "DEFAULT_R",
              "HAT_ERSATZFAHRT",
              "HAT_VERSTAERKERFAHRT",
              "HAT_FORTFUEHRUNG",
              "HAT_TRENNUNG",
              "HAT_FORTFUEHRUNG_VON_TRENNUNG",
              "HAT_ZUSAMMENFUEHRUNG",
              "HAT_FORTFUEHRUNG_DURCH_ZUSAMMENFUEHRUNG",
              "HAT_ENTLASTUNG"
            ]
          },
          "origFromIdx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "origToIdx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "refFromIdx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "refToIdx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CombinedProductType": {
        "required": ["Product"],
        "type": "object",
        "properties": {
          "Product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          }
        }
      },
      "TripStatusType": {
        "type": "object",
        "properties": {
          "detour": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "daily": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "direct": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "subOptimalDirect": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "slowDirect": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "economic": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "convenient": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "specialtrain": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "ukNationalRouteingGuideFailure": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hint": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "hintCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "unsharp": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "timeDiffCritical": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "UrlLinkType": {
        "required": ["url"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "url": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PricingType": {
        "required": ["idx"],
        "type": "object",
        "properties": {
          "any": {
            "type": "object",
            "x-className": {
              "format": "java.lang.Object",
              "type": "string"
            }
          },
          "idx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MessageCategoryType": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "KVType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Names": {
        "required": ["Name"],
        "type": "object",
        "properties": {
          "Name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Name"
            }
          }
        },
        "xml": {
          "name": "Names",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "GisRouteSegment": {
        "type": "object",
        "properties": {
          "durS": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "Edge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GisEdgeType"
            }
          },
          "TrafficMessage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrafficMessageType"
            }
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "U",
              "M",
              "H",
              "T",
              "T4L",
              "T2L",
              "TR",
              "NT",
              "CT",
              "R",
              "B",
              "CW",
              "C",
              "W",
              "F"
            ]
          },
          "rNum": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "man": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NO",
              "FR",
              "TO",
              "ON",
              "LE",
              "RI",
              "KL",
              "KR",
              "HL",
              "HR",
              "KHL",
              "KHR",
              "SL",
              "SR",
              "KSL",
              "KSR",
              "ST",
              "UT",
              "EN",
              "LV",
              "ER",
              "SIR",
              "LR",
              "EF",
              "LF",
              "CH",
              "CIF",
              "COF",
              "STA",
              "STD",
              "STU",
              "EL",
              "ELD",
              "ELU",
              "ES",
              "ESD",
              "ESU",
              "FOC",
              "FOL",
              "FOR",
              "RP",
              "RR",
              "RL",
              "TLR",
              "TRL",
              "TRR",
              "TLL"
            ]
          },
          "manTx": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "manTargetName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dirTx": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ori": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["U", "N", "S", "E", "W", "NE", "SE", "NW", "SW"]
          },
          "polyS": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "polyE": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "dist": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MessageRegionType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "polyline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Polyline"
            }
          },
          "polylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          },
          "iconCoordinate": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "ring": {
            "$ref": "#/components/schemas/Ring"
          },
          "messageRef": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ResourceLinks": {
        "type": "object",
        "properties": {
          "link": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceLinkType"
            }
          }
        }
      },
      "FareSetItem": {
        "type": "object",
        "properties": {
          "fareItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FareItem"
            }
          },
          "param": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KVType"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "desc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fromLeg": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "toLeg": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "fromLegId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toLegId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "fareSetItem",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "JourneyDetailRef": {
        "required": ["ref"],
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "JourneyDetailRef",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "HimMessages": {
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        },
        "xml": {
          "name": "HimMessages",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "param": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KVType"
            }
          },
          "externalContent": {
            "$ref": "#/components/schemas/ExternalContentType"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "desc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "cur": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "shpCtx": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fromLeg": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "toLeg": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "fromLegId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toLegId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "ticket",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "JourneyType": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "JourneyOrigin": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "JourneyDestination": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "Stops": {
            "$ref": "#/components/schemas/Stops"
          },
          "JourneyDetailRef": {
            "$ref": "#/components/schemas/JourneyDetailRef"
          },
          "Product": {
            "$ref": "#/components/schemas/ProductType"
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "referencedJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferencedJourneyType"
            }
          },
          "JourneyPath": {
            "$ref": "#/components/schemas/JourneyPathType"
          },
          "ParallelJourneyRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParallelJourneyRefType"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "addName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "direction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "directionFlag": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "trainNumber": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "trainCategory": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parallelJourneyLinkType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["UNDEF", "PLANNED", "LINKED_RT", "UNLINKED_RT"]
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "U",
              "A",
              "I",
              "R",
              "H",
              "M",
              "C",
              "D",
              "B",
              "Q",
              "L",
              "N",
              "O",
              "P",
              "S",
              "V",
              "X",
              "Z",
              "Y",
              "K",
              "G",
              "W",
              "ED",
              "TAR",
              "FN",
              "TLN",
              "LNC"
            ]
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "url": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxFrom": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxTo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "txtN": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "txtL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "txtS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtActivated": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtDeactivated": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "FreqType": {
        "type": "object",
        "properties": {
          "journey": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JourneyType"
            }
          },
          "waitMinimum": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "waitMaximum": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "alternativeCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "JourneyDetail": {
        "required": ["Stops", "dayOfOperation", "ref"],
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Stops": {
            "$ref": "#/components/schemas/Stops"
          },
          "Names": {
            "$ref": "#/components/schemas/Names"
          },
          "Product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          "Directions": {
            "$ref": "#/components/schemas/Directions"
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "JourneyStatus": {
            "type": "string",
            "enum": ["P", "R", "A", "S"]
          },
          "Polyline": {
            "$ref": "#/components/schemas/Polyline"
          },
          "PolylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          },
          "ServiceDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDays"
            }
          },
          "referencedJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferencedJourneyType"
            }
          },
          "lastPos": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "lastPosReported": {
            "type": "string",
            "format": "date-time"
          },
          "lastPassRouteIdx": {
            "type": "integer",
            "format": "int32"
          },
          "lastPassStopRef": {
            "type": "integer",
            "format": "int32"
          },
          "rtLastPassRouteIdx": {
            "type": "integer",
            "format": "int32"
          },
          "rtLastPassStopRef": {
            "type": "integer",
            "format": "int32"
          },
          "ParallelJourneyRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParallelJourneyRefType"
            }
          },
          "cancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "partCancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "reachable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "redirected": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "uncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "dayOfOperation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parallelJourneyLinkType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["UNDEF", "PLANNED", "LINKED_RT", "UNLINKED_RT"]
          },
          "ref": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Coordinate": {
        "required": ["lat", "lon"],
        "type": "object",
        "properties": {
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OccupancyType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "v": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "number": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "raw": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MessageEdgeType": {
        "type": "object",
        "properties": {
          "sstop": {
            "$ref": "#/components/schemas/StopType"
          },
          "estop": {
            "$ref": "#/components/schemas/StopType"
          },
          "sStop": {
            "$ref": "#/components/schemas/StopType"
          },
          "eStop": {
            "$ref": "#/components/schemas/StopType"
          },
          "polyline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Polyline"
            }
          },
          "polylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          },
          "iconCoordinate": {
            "$ref": "#/components/schemas/Coordinate"
          },
          "messageRef": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "direction": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Warning": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "message": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "Warning",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "Notes": {
        "required": ["Note"],
        "type": "object",
        "properties": {
          "Note": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          }
        },
        "xml": {
          "name": "Notes",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "Arrival": {
        "required": [
          "JourneyDetailRef",
          "date",
          "name",
          "stop",
          "stopid",
          "time",
          "type"
        ],
        "type": "object",
        "properties": {
          "JourneyDetailRef": {
            "$ref": "#/components/schemas/JourneyDetailRef"
          },
          "JourneyStatus": {
            "type": "string",
            "enum": ["P", "R", "A", "S"]
          },
          "ProductAtStop": {
            "$ref": "#/components/schemas/ProductType"
          },
          "Product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "Directions": {
            "$ref": "#/components/schemas/Directions"
          },
          "altId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainMastAltId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Stops": {
            "$ref": "#/components/schemas/Stops"
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "referencedJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferencedJourneyType"
            }
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "rtPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "mainMast": {
            "$ref": "#/components/schemas/StopLocation"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stop": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopid": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "isMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mainMastId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastAlt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "prognosisType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROGNOSED",
              "MANUAL",
              "REPORTED",
              "CORRECTED",
              "CALCULATED"
            ]
          },
          "time": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "scheduledTimeChanged": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "tz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "track": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "trackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "rtTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "partCancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "reachable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "redirected": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "uncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "origin": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "directionFlag": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "isBorderStop": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isTurningPoint": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "entry": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtCnclDataSourceType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DEFAULT",
              "VDV",
              "HIM",
              "HRC",
              "SIRI",
              "UIC",
              "HRX",
              "GTFS",
              "FIS",
              "DDS",
              "PAISA",
              "FE",
              "BLACKLIST",
              "ARAMIS",
              "RTABO_2"
            ]
          }
        }
      },
      "Polyline": {
        "required": ["delta"],
        "type": "object",
        "properties": {
          "crd": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "delta": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "dim": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["WGS84", "PLANAR", "HAFASGEO"]
          },
          "crdEncYX": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "crdEncZ": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "crdEncS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "StopLocation": {
        "required": ["extId", "id", "name"],
        "type": "object",
        "properties": {
          "minimumChangeDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "LocationNotes": {
            "$ref": "#/components/schemas/LocationNotes"
          },
          "Message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "productAtStop": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          "TariffResult": {
            "$ref": "#/components/schemas/TariffResult"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceLinks"
            }
          },
          "altId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainMastAltId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timezoneOffset": {
            "type": "integer",
            "format": "int32"
          },
          "mainMast": {
            "$ref": "#/components/schemas/StopLocation"
          },
          "equivalentStopLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StopLocation"
            }
          },
          "entryPointLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StopLocation"
            }
          },
          "weatherInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeatherInformationType"
            }
          },
          "assignedPois": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoordLocation"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "isMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mainMastId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastAlt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "defName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "track": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "trackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "dist": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "products": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "meta": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "refinable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "matchValue": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "entry": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProductType": {
        "type": "object",
        "properties": {
          "icon": {
            "$ref": "#/components/schemas/IconType"
          },
          "status": {
            "$ref": "#/components/schemas/ProductStatusType"
          },
          "fromLocation": {
            "$ref": "#/components/schemas/StopType"
          },
          "toLocation": {
            "$ref": "#/components/schemas/StopType"
          },
          "operatorInfo": {
            "$ref": "#/components/schemas/OperatorType"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "addName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "displayNumber": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "num": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "line": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lineId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "catOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "catIn": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "catCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cls": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "catOutS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "catOutL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "operatorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "admin": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxFrom": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxTo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "matchId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tarGr": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "surcharge": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "outCtrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "locTraffic": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "shipTraffic": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ResourceLinkType": {
        "required": ["href", "rel"],
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "href": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ExternalMessageInformationType": {
        "type": "object",
        "properties": {
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extIdSrc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Messages": {
        "required": ["Message"],
        "type": "object",
        "properties": {
          "Message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        },
        "xml": {
          "name": "Messages",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "ProductStatusType": {
        "type": "object",
        "properties": {
          "icon": {
            "$ref": "#/components/schemas/IconType"
          },
          "rtIcon": {
            "$ref": "#/components/schemas/IconType"
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "txt": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TariffResult": {
        "type": "object",
        "properties": {
          "fareSetItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FareSetItem"
            }
          },
          "clickout": {
            "type": "string"
          },
          "externalContent": {
            "$ref": "#/components/schemas/ExternalContentType"
          },
          "param": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KVType"
            }
          }
        },
        "xml": {
          "name": "TariffResult",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "TrafficMessageType": {
        "type": "object",
        "properties": {
          "icon": {
            "$ref": "#/components/schemas/IconType"
          },
          "location": {
            "$ref": "#/components/schemas/StopLocation"
          },
          "PolylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "U",
              "RCLM",
              "AC",
              "RW",
              "AT",
              "CO",
              "TRAFFIC_JAM",
              "DELAY",
              "ROAD_CLOSED",
              "JUNCTION_CLOSED",
              "LANE_CLOSED",
              "BURNING_VEHICLE",
              "ACCIDENT",
              "DANGER",
              "OBSTRUCTION",
              "RAIL_ROAD_CROSSING",
              "TRAFFIC_LIGHTS_DEFECT",
              "WEATHER",
              "WEATHER_ICE",
              "WEATHER_SNOW",
              "WEATHER_POOR_VISIBILITY",
              "WEATHER_HAIL",
              "WEATHER_WIND",
              "CONSTRUCTION_SITE",
              "REROUTING",
              "GENERIC",
              "ACCESS_RESTRICTION"
            ]
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "desc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IconType": {
        "type": "object",
        "properties": {
          "foregroundColor": {
            "$ref": "#/components/schemas/RGBAColorType"
          },
          "backgroundColor": {
            "$ref": "#/components/schemas/RGBAColorType"
          },
          "borderColor": {
            "$ref": "#/components/schemas/RGBAColorType"
          },
          "res": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "txt": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "txtS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "style": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["U", "N", "B", "I", "BI"]
          },
          "shape": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["U", "R", "C", "RES", "B", "H"]
          },
          "shapeRes": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Name": {
        "required": ["name", "number"],
        "type": "object",
        "properties": {
          "Product": {
            "$ref": "#/components/schemas/ProductType"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "addName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "number": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "category": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxFrom": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxTo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "Name",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "DepartureBoard": {
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Departure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Departure"
            }
          },
          "Message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "stopid": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "DepartureBoard",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "LocationNote": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "U",
              "A",
              "I",
              "R",
              "H",
              "M",
              "C",
              "D",
              "B",
              "Q",
              "L",
              "N",
              "O",
              "P",
              "S",
              "V",
              "X",
              "Z",
              "Y",
              "K",
              "G",
              "W",
              "ED",
              "TAR",
              "FN",
              "TLN",
              "LNC"
            ]
          },
          "txtN": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "txtL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "txtS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtActivated": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtDeactivated": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "url": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CoordLocation": {
        "required": ["name", "type"],
        "type": "object",
        "properties": {
          "LocationNotes": {
            "$ref": "#/components/schemas/LocationNotes"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceLinks"
            }
          },
          "icon": {
            "$ref": "#/components/schemas/IconType"
          },
          "entryLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoordLocation"
            }
          },
          "childLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoordLocation"
            }
          },
          "weatherInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeatherInformationType"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "dist": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "refinable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "matchValue": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ParallelJourneyRefType": {
        "type": "object",
        "properties": {
          "fromLocation": {
            "$ref": "#/components/schemas/StopType"
          },
          "toLocation": {
            "$ref": "#/components/schemas/StopType"
          },
          "journeyDetailRef": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["UNDEF", "UNION", "THROUGHCOACH", "TIETHROUGH"]
          },
          "linkType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["UNDEF", "PLANNED", "LINKED_RT", "UNLINKED_RT"]
          }
        }
      },
      "ResultStatusType": {
        "type": "object",
        "properties": {
          "timeDiffCritical": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Leg": {
        "required": ["Destination", "Origin", "id", "idx", "type"],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "minimumChangeDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "Origin": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "Destination": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "JourneyOrigin": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "JourneyDestination": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "JourneyDetailRef": {
            "$ref": "#/components/schemas/JourneyDetailRef"
          },
          "Freq": {
            "$ref": "#/components/schemas/FreqType"
          },
          "GisRef": {
            "$ref": "#/components/schemas/GisRef"
          },
          "GisRoute": {
            "$ref": "#/components/schemas/GisRouteType"
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "TrafficMessage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrafficMessageType"
            }
          },
          "JourneyStatus": {
            "type": "string",
            "enum": ["P", "R", "A", "S"]
          },
          "Product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          "CombinedProduct": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CombinedProductType"
            }
          },
          "Polyline": {
            "$ref": "#/components/schemas/Polyline"
          },
          "PolylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          },
          "Stops": {
            "$ref": "#/components/schemas/Stops"
          },
          "ServiceDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDays"
            }
          },
          "JourneyDetail": {
            "$ref": "#/components/schemas/JourneyDetail"
          },
          "ParallelJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JourneyType"
            }
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "referencedJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferencedJourneyType"
            }
          },
          "ParallelJourneyRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParallelJourneyRefType"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "idx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "addName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "number": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "category": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "partCancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "reachable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "waiting": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "waitingState": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["WAIT", "NOWAIT", "UNDEF"]
          },
          "redirected": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "direction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "directionFlag": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dist": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "hide": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "psCtxArriveEarlier": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "psCtxDepartLater": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "recState": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["U", "C", "P", "N", "O"]
          },
          "changeAssured": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "uncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "changeRequired": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SortingGroupType": {
        "required": ["tripId"],
        "type": "object",
        "properties": {
          "tripId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "TI",
              "CO",
              "CF",
              "UT",
              "DT",
              "AT",
              "PT",
              "CO2",
              "OC",
              "CAL"
            ]
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "JourneyPathItemType": {
        "type": "object",
        "properties": {
          "progressInTime": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "progressInPercent": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "progressAbs": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "fromLocationId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toLocationId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dirGeo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "state": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["U", "B", "O", "A"]
          }
        }
      },
      "TripList": {
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Trip": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TripType"
            }
          },
          "Pricing": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingType"
            }
          },
          "SotContext": {
            "$ref": "#/components/schemas/SotContextType"
          },
          "ResultStatus": {
            "$ref": "#/components/schemas/ResultStatusType"
          },
          "Sorting": {
            "$ref": "#/components/schemas/SortingType"
          },
          "scrB": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "scrF": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "scrReturnB": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "scrReturnF": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "TripList",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "ServiceDays": {
        "type": "object",
        "properties": {
          "planningPeriodBegin": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planningPeriodEnd": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sDaysR": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sDaysI": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sDaysB": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxFrom": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxTo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TechnicalMessages": {
        "type": "object",
        "properties": {
          "TechnicalMessage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TechnicalMessage"
            }
          }
        },
        "xml": {
          "name": "TechnicalMessages",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "MessageTextType": {
        "required": ["tag", "text"],
        "type": "object",
        "properties": {
          "tag": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "text": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GisEdgeType": {
        "type": "object",
        "properties": {
          "edgeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "graphId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AffectedStopType": {
        "required": ["StopLocation"],
        "type": "object",
        "properties": {
          "StopLocation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StopLocation"
            }
          }
        }
      },
      "ExternalContentType": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "x-className": {
              "format": "java.lang.Object",
              "type": "string"
            }
          },
          "icon": {
            "$ref": "#/components/schemas/IconType"
          },
          "provider": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "providerName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "text": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "contentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MessageChannelType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrlLinkType"
            }
          },
          "validFromTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "validFromDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "validToTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "validToDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Departure": {
        "required": [
          "JourneyDetailRef",
          "date",
          "name",
          "stop",
          "stopid",
          "time",
          "type"
        ],
        "type": "object",
        "properties": {
          "JourneyDetailRef": {
            "$ref": "#/components/schemas/JourneyDetailRef"
          },
          "JourneyStatus": {
            "type": "string",
            "enum": ["P", "R", "A", "S"]
          },
          "ProductAtStop": {
            "$ref": "#/components/schemas/ProductType"
          },
          "Product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "Directions": {
            "$ref": "#/components/schemas/Directions"
          },
          "altId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainMastAltId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Stops": {
            "$ref": "#/components/schemas/Stops"
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "ParallelJourneyRef": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParallelJourneyRefType"
            }
          },
          "referencedJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferencedJourneyType"
            }
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "rtPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "mainMast": {
            "$ref": "#/components/schemas/StopLocation"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stop": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopid": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "isMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mainMastId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastAlt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "prognosisType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROGNOSED",
              "MANUAL",
              "REPORTED",
              "CORRECTED",
              "CALCULATED"
            ]
          },
          "time": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "scheduledTimeChanged": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "track": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "trackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "rtTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "partCancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "reachable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "redirected": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "direction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "directionFlag": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "directionExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "timeAtArrival": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateAtArrival": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTimeAtArrival": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDateAtArrival": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "isFastest": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isBorderStop": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isTurningPoint": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "entry": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtCnclDataSourceType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DEFAULT",
              "VDV",
              "HIM",
              "HRC",
              "SIRI",
              "UIC",
              "HRX",
              "GTFS",
              "FIS",
              "DDS",
              "PAISA",
              "FE",
              "BLACKLIST",
              "ARAMIS",
              "RTABO_2"
            ]
          },
          "uncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EcoType": {
        "type": "object",
        "properties": {
          "co2": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "co2f": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "part": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "part10": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "partV": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "nmhc": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "nox": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "prime": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "primef": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "so2": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "ubp": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "dist": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["PUT", "PFT", "PRT", "BEE", "PTM", "IMT"]
          },
          "nmvoc": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "ubp13": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "co2el": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "primeEnergy": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "dur": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PolylineDesc": {
        "required": ["delta"],
        "type": "object",
        "properties": {
          "crd": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "delta": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "dim": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "crdEncYX": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "crdEncZ": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "crdEncS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TagsType": {
        "required": ["tag"],
        "type": "object",
        "properties": {
          "tag": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Warnings": {
        "type": "object",
        "properties": {
          "Warning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            }
          }
        },
        "xml": {
          "name": "Warnings",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "LocationList": {
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopLocationOrCoordLocation": {
            "type": "array",
            "items": {
              "type": "object",
              "x-className": {
                "format": "java.lang.Object",
                "type": "string"
              }
            }
          },
          "scrollCtx": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "xml": {
          "name": "LocationList",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "FareItem": {
        "type": "object",
        "properties": {
          "ticket": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ticket"
            }
          },
          "param": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KVType"
            }
          },
          "externalContent": {
            "$ref": "#/components/schemas/ExternalContentType"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "desc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "price": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "cur": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "shpCtx": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fromLeg": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "toLeg": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "fromLegId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toLegId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "fareItem",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "RGBAColorType": {
        "type": "object",
        "properties": {
          "r": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "g": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "b": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "a": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "hex": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TripType": {
        "required": ["Destination", "LegList", "Origin"],
        "type": "object",
        "properties": {
          "duration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "rtDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "combinedMinDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "return": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "Origin": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "Destination": {
            "$ref": "#/components/schemas/OriginDestType"
          },
          "Messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "Eco": {
            "$ref": "#/components/schemas/EcoType"
          },
          "EcoCmp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EcoType"
            }
          },
          "ServiceDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceDays"
            }
          },
          "Freq": {
            "$ref": "#/components/schemas/FreqType"
          },
          "LegList": {
            "$ref": "#/components/schemas/LegList"
          },
          "TariffResult": {
            "$ref": "#/components/schemas/TariffResult"
          },
          "calculation": {
            "type": "string",
            "enum": [
              "INITIAL",
              "RETRY_SHARP",
              "RETRY_UNSHARP",
              "RETRY_DOUBLE_RADIUS",
              "RETRY_UNSHARP_NEW_RADIUS",
              "RETRY_PRESELECTION_NEW_RADIUS"
            ]
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "reliability": {
            "$ref": "#/components/schemas/ConnectionReliabilityType"
          },
          "TripStatus": {
            "$ref": "#/components/schemas/TripStatusType"
          },
          "via": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StopType"
            }
          },
          "alternative": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasAlternative": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "individualChangeTimes": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "valid": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasDelayInfo": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "idx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "tripId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ctxRecon": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ecoUrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "checksum": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "transferCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "combinedCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "calBurned": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "StopType": {
        "required": ["extId", "id", "name"],
        "type": "object",
        "properties": {
          "minimumChangeDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "altId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainMastAltId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "arrPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "rtArrPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "depPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "rtDepPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "weatherInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeatherInformationType"
            }
          },
          "mainMast": {
            "$ref": "#/components/schemas/StopLocation"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "arrPrognosisType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROGNOSED",
              "MANUAL",
              "REPORTED",
              "CORRECTED",
              "CALCULATED"
            ]
          },
          "depPrognosisType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROGNOSED",
              "MANUAL",
              "REPORTED",
              "CORRECTED",
              "CALCULATED"
            ]
          },
          "depTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "depDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "depTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "scheduledDepTimeChanged": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "arrTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "arrDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "arrTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "scheduledArrTimeChanged": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "passingTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "passingDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "passingTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "arrTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "arrTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "depTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "depTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtDepTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDepDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDepTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "rtArrTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtArrDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtArrTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "rtArrTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtArrTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtDepTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDepTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtPassingTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtPassingDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtPassingTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "cancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelledDeparture": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelledArrival": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mainMastId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastAlt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "alighting": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "boarding": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtAlighting": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtBoarding": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "additional": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isBorderStop": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isTurningPoint": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "arrHide": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "depHide": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "depDir": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "entry": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtCnclDataSourceType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DEFAULT",
              "VDV",
              "HIM",
              "HRC",
              "SIRI",
              "UIC",
              "HRX",
              "GTFS",
              "FIS",
              "DDS",
              "PAISA",
              "FE",
              "BLACKLIST",
              "ARAMIS",
              "RTABO_2"
            ]
          },
          "arrUncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "depUncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Direction": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "flag": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxFrom": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxTo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "Direction",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "OriginDestType": {
        "required": ["date", "name", "time", "type"],
        "type": "object",
        "properties": {
          "minimumChangeDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "mcpData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KVType"
            }
          },
          "altId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mainMastAltId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Occupancy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OccupancyType"
            }
          },
          "platform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "rtPlatform": {
            "$ref": "#/components/schemas/PlatformType"
          },
          "weatherInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeatherInformationType"
            }
          },
          "mainMast": {
            "$ref": "#/components/schemas/StopLocation"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdx": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "prognosisType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROGNOSED",
              "MANUAL",
              "REPORTED",
              "CORRECTED",
              "CALCULATED"
            ]
          },
          "time": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "scheduledTimeChanged": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "track": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "trackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTz": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "rtTrack": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rtTrackHidden": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hasMainMast": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mainMastId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastLat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "mainMastAlt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "alighting": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "boarding": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtAlighting": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rtBoarding": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelledDeparture": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "cancelledArrival": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "uncertainDelay": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "additional": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isBorderStop": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "isTurningPoint": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "hide": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "entry": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mcp": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "trainCompositionMarker": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "rtCnclDataSourceType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DEFAULT",
              "VDV",
              "HIM",
              "HRC",
              "SIRI",
              "UIC",
              "HRX",
              "GTFS",
              "FIS",
              "DDS",
              "PAISA",
              "FE",
              "BLACKLIST",
              "ARAMIS",
              "RTABO_2"
            ]
          },
          "psCtxArriveEarlier": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "psCtxDepartLater": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Ring": {
        "required": ["lat", "lon"],
        "type": "object",
        "properties": {
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "minRadius": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "maxRadius": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "GisRouteType": {
        "type": "object",
        "properties": {
          "durS": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "durR": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "durST": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "durW2C": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "durW2D": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "seg": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GisRouteSegment"
            }
          },
          "Notes": {
            "$ref": "#/components/schemas/Notes"
          },
          "polyline": {
            "$ref": "#/components/schemas/Polyline"
          },
          "polylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          },
          "altPolyline": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Polyline"
            }
          },
          "altPolylineGroup": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolylineGroup"
            }
          },
          "dist": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "dirTxt": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dirGeo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "edgeHashS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "edgeHashR": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "totUphill": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "totDownhill": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OperatorType": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "administration": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "nameS": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "nameN": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "nameL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "addName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PolylineGroup": {
        "type": "object",
        "properties": {
          "polylineDesc": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolylineDesc"
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "coordType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["WGS84", "PLANAR", "HAFASGEO"]
          },
          "layerName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Message": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "dailyDuration": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "x-types": {
              "regex": "(-?)P(?=\\\\d|T\\\\d)(?:(\\\\d+)Y)?(?:(\\\\d+)M)?(?:(\\\\d+)([DW]))?(?:T(?:(\\\\d+)H)?(?:(\\\\d+)M)?(?:(\\\\d+(?:\\\\.\\\\d+)?)S)?)?",
              "java": "javax.xml.datatype.Duration",
              "xml": "xs:duration"
            }
          },
          "affectedProduct": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductType"
            }
          },
          "affectedJourney": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JourneyType"
            }
          },
          "edge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageEdgeType"
            }
          },
          "region": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageRegionType"
            }
          },
          "event": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageEventType"
            }
          },
          "affectedStops": {
            "$ref": "#/components/schemas/AffectedStopType"
          },
          "validFromStop": {
            "$ref": "#/components/schemas/StopType"
          },
          "validToStop": {
            "$ref": "#/components/schemas/StopType"
          },
          "tags": {
            "$ref": "#/components/schemas/TagsType"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageChannelType"
            }
          },
          "messageCategory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageCategoryType"
            }
          },
          "messageText": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageTextType"
            }
          },
          "validityDays": {
            "$ref": "#/components/schemas/ServiceDays"
          },
          "extInfo": {
            "$ref": "#/components/schemas/ExternalMessageInformationType"
          },
          "Note": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "externalId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "act": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "head": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lead": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "text": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "textInternal": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "customText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tckr": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "company": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "category": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "products": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "icon": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxFrom": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "routeIdxTo": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "sTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "eTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "eDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "altStart": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "altEnd": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modTime": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dailyStartingAt": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "baseType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["UNDEF", "GLOBAL", "INFRASTRUCTURE"]
          },
          "altSection": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "GisRef": {
        "required": ["ref"],
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "GisRef",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "SotContextType": {
        "required": ["locMode"],
        "type": "object",
        "properties": {
          "calcDate": {
            "type": "string"
          },
          "calcTime": {
            "type": "string"
          },
          "journeyId": {
            "type": "string"
          },
          "trainName": {
            "type": "string"
          },
          "legIdx": {
            "type": "integer",
            "format": "int32"
          },
          "legIdxFootPathConnection": {
            "type": "integer",
            "format": "int32"
          },
          "legId": {
            "type": "string"
          },
          "legIdFootPathConnection": {
            "type": "string"
          },
          "prevLocRouteIdx": {
            "type": "integer",
            "format": "int32"
          },
          "curLocRouteIdx": {
            "type": "integer",
            "format": "int32"
          },
          "locRouteIdxFootPathConnection": {
            "type": "integer",
            "format": "int32"
          },
          "prevLoc": {
            "$ref": "#/components/schemas/Location"
          },
          "curLoc": {
            "$ref": "#/components/schemas/Location"
          },
          "locFootPathConnection": {
            "$ref": "#/components/schemas/Location"
          },
          "locMode": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "FROM_START",
              "IN_TRAIN",
              "AT_PASSED_STOP",
              "AT_CHANGE_STOP",
              "BEFORE_TRAVEL",
              "AT_DESTINATION",
              "ERROR",
              "ERROR_SEARCH_FROM_TRAIN_BEFORE_START",
              "ERROR_IN_RECONSTRUCTION",
              "TO_BE_DEFINED_IN_SERVER",
              "ERROR_TRAIN_CANCELLED",
              "CHECK_COMPLETE_TRAIN",
              "AT_LAST_USABLE_STOP",
              "ERROR_ALL_TRAINS_FILTERED",
              "ERROR_STAY_IN_CURRENT_CONNECTION"
            ]
          }
        }
      },
      "ArrivalBoard": {
        "type": "object",
        "properties": {
          "TechnicalMessages": {
            "$ref": "#/components/schemas/TechnicalMessages"
          },
          "Warnings": {
            "$ref": "#/components/schemas/Warnings"
          },
          "serverVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dialectVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "planRtTs": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "errorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorText": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "internalErrorTextOut": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "Arrival": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Arrival"
            }
          },
          "Message": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "stopid": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stopExtId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "ArrivalBoard",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "Note": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationNote"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lon": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "lat": {
            "type": "number",
            "xml": {
              "attribute": true
            }
          },
          "alt": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "JourneyPathType": {
        "required": ["JourneyPathItem"],
        "type": "object",
        "properties": {
          "JourneyPathItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JourneyPathItemType"
            }
          },
          "Location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StopType"
            }
          },
          "PolylineGroup": {
            "$ref": "#/components/schemas/PolylineGroup"
          }
        }
      },
      "TechnicalMessage": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        },
        "xml": {
          "name": "TechnicalMessage",
          "namespace": "http://hacon.de/hafas/proxy/hafas-proxy"
        }
      },
      "ConnectionReliabilityType": {
        "type": "object",
        "properties": {
          "original": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["GUARANTEED", "HIGH", "LOW", "ABORTIVE", "UNDEF"]
          },
          "alternative": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": ["GUARANTEED", "HIGH", "LOW", "ABORTIVE", "UNDEF"]
          }
        }
      }
    },
    "securitySchemes": {
      "accessId": {
        "type": "apiKey",
        "name": "accessId",
        "in": "query"
      }
    }
  }
}
